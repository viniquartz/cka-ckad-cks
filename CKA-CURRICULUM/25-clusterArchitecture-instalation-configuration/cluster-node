-----------> SO <--------------
Carregar dois modulos de kernel

ufw disable
swapoff -a
sed -i '/swap/d' /etc/fstab
modprobe overlay
modprobe br_netfilter

#carregar modulos quando reiniciar
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

lsmod | grep br_netfilter
lsmod | grep overlay

mudar parametros no SO para habilitar o ip forwarding
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sysctl --system

sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward

-----------> Runtime <--------------
runtime == containerd
apt-get install containerd -y

mkdir -p /etc/containerd
containerd config default > /etc/containerd/config.toml
    atualizar /etc/containerd/config.toml
        SystemdCgroup = true
systemctl status containerd.service
systemctl restart containerd.service

-----------> kubeadm kubelet kubectl <--------------

Verificar na doc

apt-get update
apt-get install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl

-----------> Cluster <--------------

kubeadm init --apiserver-advertise-address=10.0.1.4
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

export KUBECONFIG=/etc/kubernetes/admin.conf

Node
    cp -i /etc/kubernetes/kubelet.conf $HOME/.kube/config

gerar token para adicionar node
kubeadm token create --print-join-command

For flannel to work correctly, you must pass --pod-network-cidr=10.244.0.0/16 to kubeadm init.

For Weave Verificar /etc/cni/net.d/ apagar o que nao for weave

->>>>>> Node
